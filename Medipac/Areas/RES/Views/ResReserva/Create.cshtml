@model Medipac.Areas.RES.Data.DTO.DtoResReserva

@{
    ViewData["Title"] = "Reservar Cita";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Encabezado de la tarjeta */
    .bg-gradient {
        background: linear-gradient(90deg, #1d3557, #457b9d);
    }

    .titAgenda h1 {
        font-family: 'Poppins', sans-serif;
        font-size: 2rem;
        font-weight: 600;
    }

    /* Estilo de inputs */
    .form-select {
        border-radius: 8px;
        padding: 10px;
        border: 1px solid #ced4da;
    }

        .form-select:focus {
            outline: none;
            box-shadow: 0 0 8px rgba(69, 123, 157, 0.5);
        }

    /* Calendario */
    /* Contenedor responsivo */
    #calendar {
        max-width: 100%; /* Ocupa todo el ancho disponible */
        min-width: 300px; /* Asegura un ancho mínimo */
        border-radius: 8px;
        background-color: #ffffff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin: auto; /* Centrado */
    }

    /* Contenedor principal */
    #calendarContainer {
        overflow-x: auto;
    }
</style>

<div class="container-fluid p-4">
    <div class="card titAgenda mb-4 shadow-lg border-0 rounded">
        <div class="card-header text-center bg-gradient bg-primary text-white rounded-top">
            <h1 class="display-6">@ViewData["Title"]</h1>
        </div>
    </div>

    <div class="row mt-4 gx-4">
        <!-- Selección de Especialidad -->
        <div class="col-md-6">
            <label for="Especialidad" class="form-label fw-bold">
                <i class="bi bi-briefcase-fill me-2"></i>Especialidad
            </label>
            @Html.DropDownList(
                     "EspecialidadId",
                     new SelectList(ViewBag.Especialidades, "IdEspecialidad", "Nombre"),
                     "Seleccione...",
                     new { @class = "form-select shadow-sm rounded" }
                     )
        </div>

        <!-- Selección de Médico -->
        <div class="col-md-6">
            <label for="Medico" class="form-label fw-bold">
                <i class="bi bi-person-circle me-2"></i>Médico
            </label>
            <select id="MedicoId"
                    name="MedicoId"
                    class="form-select shadow-sm rounded"
                    disabled>
                <option value="">Seleccione un médico...</option>
            </select>
        </div>
    </div>

    <!-- Calendario -->
    <div id="calendarContainer" class="mt-5">
        <div class="card shadow-sm border-0">
            <div class="card-body">
                <h2 class="fs-5 fw-bold mb-3 text-secondary">
                    <i class="bi bi-calendar3 me-2"></i>Calendario de Disponibilidad
                </h2>
                <div id="calendar" class="rounded"></div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        // Manejo de cambio en el dropdown de especialidades
        $('#EspecialidadId').on('change', function () {
            var especialidadId = $(this).val();
            $('#MedicoId').prop('disabled', true).html('<option>Cargando...</option>');

            $.getJSON('@Url.Action("GetMedicosPorEspecialidad")', { especialidadId: especialidadId }, function (data) {
                console.log(data)
                var options = '<option value="">Seleccione un médico...</option>';
                data.forEach(function (medico) {
                    options += `<option value="${medico.idMedico}">${medico.nombres}</option>`;
                });
                $('#MedicoId').html(options).prop('disabled', false);
            });
        });

        // Configuración del calendario FullCalendar
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'es',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            windowResize: function(view) {
                // Cambiar automáticamente la vista según el ancho de la ventana
                if (window.innerWidth < 768) {
                    calendar.changeView('listWeek'); // Vista de lista en móviles
                } else {
                    calendar.changeView('dayGridMonth'); // Vista mensual en pantallas más grandes
                }
            },
            contentHeight: 'auto', // Ajusta la altura automáticamente
            events: function (fetchInfo, successCallback, failureCallback) {
                var medicoId = $('#MedicoId').val();

                console.log("Fetching events for medicoId:" + medicoId); // Log para verificar
                // Escuchar cambios en el selector de médico
                $('#MedicoId').on('change', function () {
                    var selectedMedicoId = $(this).val();
                    console.log("Selected Medico ID:", selectedMedicoId); // Verificar el ID seleccionado
                    calendar.refetchEvents(); // Recargar eventos del calendario al seleccionar un médico
                });

                if (!medicoId) {
                    successCallback([]);
                    return;
                }

                $.ajax({
                    url: '@Url.Action("GetDisponibilidadMedico", "ResReserva", new { area = "RES" })',
                    dataType: 'json',
                    data: {
                        medicoId: medicoId,
                        start: fetchInfo.startStr,
                        end: fetchInfo.endStr
                    },
                    success: function (data) {
                        console.log("Received data:", data);
                        successCallback(data);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching events:", error);
                        failureCallback();
                    }
                });

            },
            eventClick: function(info) {
                // Obtener información del evento
                const agendaId = info.event.id;
                const fechaHoraReserva = info.event.start.toLocaleString(); // Ajustar el formato según prefieras

                // Mostrar SweetAlert2 para confirmar la reserva
                Swal.fire({
                    title: '<strong>¿Desea confirmar la reserva?</strong>',
                    html: `<p><i class="bi bi-person-circle"></i> Médico: ${info.event.title}</p>
                           <p><i class="bi bi-calendar-event"></i> Fecha y Hora: ${fechaHoraReserva}</p>`,
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Confirmar',
                    cancelButtonText: 'Cancelar',
                    customClass: {
                        popup: 'shadow-lg rounded',
                    },
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Si el usuario confirma, hacer la reserva
                        $.ajax({
                            url: '@Url.Action("ConfirmReservation", "ResReserva", new { area = "RES" })',
                            type: 'POST',
                            data: {
                                agendaId: agendaId
                            },
                            success: function(response) {
                                // Mostrar mensaje de éxito
                                Swal.fire({
                                    title: 'Reserva Confirmada',
                                    text: 'Su reserva se ha realizado exitosamente.',
                                    icon: 'success',
                                    timer: 2000,
                                    showConfirmButton: false
                                });
                                // Opcional: Recargar el calendario para actualizar la disponibilidad
                                calendar.refetchEvents();
                            },
                            error: function() {
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Hubo un problema al realizar la reserva. Por favor, inténtelo de nuevo.',
                                    icon: 'error'
                                });
                            }
                        });
                    }
                });
            }
        });

        // Renderizar el calendario
        calendar.render();
    });

    // Función para mostrar el modal con animación
    function ModalGeneral(title, url) {
        $('#myModal .modal-title').text(title);
        $('#myModal .modal-body').load(url, function () {
            $('#myModal').modal({ show: true });
            $('#myModal').addClass('fade-in');
        });
    }
</script>
