@model Medipac.Areas.RES.Data.DTO.DtoResAgenda

<div class="container mt-3">
    <form id="editForm" method="post">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.IdAgenda)

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="Fecha" class="form-label">Fecha</label>
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(m => m.Fecha, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                <label for="Disponible" class="form-label">Disponibilidad</label>
                @Html.DropDownListFor(model => model.Disponible, new SelectList(ViewBag.Disponible, "Key", "Value"), "Seleccione...", new
                    {
                        @class = "form-select",
                        disabled = "disabled"
                    })
                @Html.ValidationMessageFor(m => m.Disponible, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="HoraInicioDisplay" class="form-label">Hora de Inicio</label>
                @Html.EditorFor(model => model.HoraInicioDisplay, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", type = "time" } })
            </div>
            <div class="col-md-6">
                <label for="HoraFinDisplay" class="form-label">Hora de Fin</label>
                @Html.EditorFor(model => model.HoraFinDisplay, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", type = "time" } })
            </div>
        </div>

        <div class="mb-3">
            <label for="Descripcion" class="form-label">Descripción</label>
            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = 5, disabled = "disabled" })
        </div>

        <div class="d-flex justify-content-end mt-4">
            <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Volver</button> <!-- Botón de Cancelar -->
            <button type="button" class="btn btn-warning me-2" id="btnEdit">Editar</button>
            <button type="submit" class="btn btn-primary d-none" id="btnSave">Guardar</button>
        </div>
    </form>
</div>

<script>
    $(document).ready(function () {
        // Al hacer clic en el botón Editar, habilita los campos para edición
        $('#btnEdit').click(function () {
            $('#editForm').find(':input').prop('disabled', false);
            $(this).addClass('d-none');
            $('#btnSave').removeClass('d-none');
        });

        $('#editForm').on('submit', function (e) {
            e.preventDefault();

            $.ajax({
                url: '@Url.Action("Edit", "ResAgenda", new { area = "RES" })',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    // Verificar si la respuesta indica éxito o error
                    if (response.success) {
                        $('#Mdl_General').modal('hide'); // Cerrar el modal
                        Swal.fire({
                            title: '¡Actualización Exitosa!',
                            text: 'La disponibilidad se ha actualizado correctamente.',
                            icon: 'success',
                            confirmButtonText: 'Aceptar'
                        }).then(() => {
                            location.reload(); // Recargar para reflejar los cambios en el calendario
                        });
                    } else {
                        // Mostrar SweetAlert de error con el mensaje del servidor
                        Swal.fire({
                            title: 'Error',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'Cerrar'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        title: 'Error',
                        text: 'Ocurrió un error al intentar actualizar la disponibilidad.',
                        icon: 'error',
                        confirmButtonText: 'Cerrar'
                    });
                }
            });
        });
    });
</script>
